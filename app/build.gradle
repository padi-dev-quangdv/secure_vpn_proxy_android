plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk build_versions.compile_sdk

    defaultConfig {
        applicationId "com.tanify.vpnblocker"
        minSdk build_versions.min_sdk
        targetSdk build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "environment"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            dimension "environment"
            buildConfigField "String", "BASE_API_URL", "\"https://api.dev-vpn.tanify.xyz/\""
        }

        staging {
            applicationIdSuffix ".staging"
            dimension "environment"
            buildConfigField "String", "BASE_API_URL", "\"\""
        }

        production {
            dimension "environment"
            buildConfigField "String", "BASE_API_URL", "\"\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += [
                    "-Xjvm-default=all",
            ]
        }
    }
    buildFeatures {
        dataBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.1"
    }

    kapt {
        generateStubs = true
    }

    namespace 'com.midterm.securevpnproxy'
}

dependencies {
    api deps.core_ktx
    api deps.timber
    api deps.constraint_layout
    api deps.fragment.runtime_ktx
    api deps.material
    api deps.app_compat
    api deps.refresh_layout
    api deps.recyclerview

    // Room
    implementation deps.room.ktx
    implementation deps.room.runtime
    implementation project(path: ':app:dns')
    implementation project(path: ':app:localDb')
    kapt deps.room.compiler

    //Coroutine
    implementation deps.coroutines.values()

    // Navigation
    api deps.navigation.values()

    // ViewModel
    api deps.lifecycle.java8
    api deps.lifecycle.runtime_ktx
    api deps.lifecycle.viewmodel_ktx

    implementation 'me.relex:circleindicator:2.1.6'

    // Firebase
    implementation platform(deps.firebase.bom)
    implementation deps.firebase.analytics
    implementation deps.firebase.notification
    implementation deps.firebase.crashlytics
    implementation deps.firebase.firestore

    // Dagger Hilt
    implementation deps.hilt.android
    kapt deps.hilt.compiler

    implementation deps.network.values()

    //Datastore - SharedPreference replacement
    implementation deps.datastore.values()

    implementation project(path: ':app:authentication')
//    implementation project(path: ':app:localDb')

    api deps.compose.impl.values()
    debugApi deps.compose.debugImpl.values()

}

kapt {
    correctErrorTypes = true
}

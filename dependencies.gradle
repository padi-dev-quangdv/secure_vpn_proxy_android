/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.activity = '1.1.0'
versions.appsflyer = '6.3.2'
versions.android_gradle_plugin = '4.0.0'
versions.annotations = "1.0.0"
versions.apache_commons = "2.5"
versions.appcompat = '1.6.1'
versions.arch_core = "2.1.0"
versions.atsl_core = "1.3.0"
versions.atsl_junit = "1.1.2"
versions.atsl_rules = "1.3.0"
versions.atsl_runner = "1.3.0"
versions.benchmark = "1.1.0-alpha01"
versions.coil = '2.4.0'
versions.cardview = "1.0.0"
versions.constraint_layout = '2.1.3'
versions.core_ktx = "1.7.0"
versions.coroutines = "1.6.2"
versions.anychart = "1.1.2"
versions.dagger = "2.16"
versions.datastore = "1.0.0"
versions.dexmaker = "2.2.0"
versions.espresso = "3.2.0"
versions.fragment = "1.5.0-rc01"
versions.glide = "4.8.0"
versions.hamcrest = "1.3"
versions.hive_mq = "1.3.1"
versions.hilt = '2.46.1'
versions.hilt_common = '1.0.0'
versions.junit = "4.12"
versions.kotlin = '1.6.21'
versions.lifecycle = "2.6.0"
versions.lottie = "6.0.0"
versions.mapstruct = '1.5.0.Beta1'
versions.material = '1.6.1'
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.mockwebserver = "3.8.1"
versions.moshi = '1.14.0'
versions.multidex = "2.0.1"
versions.navigation = "2.5.0"
versions.okhttp = "4.11.0"
versions.paging = '3.1.1'
versions.recyclerview = "1.2.1"
versions.retrofit = "2.9.0"
versions.robolectric = "4.2"
versions.room = '2.5.2'
versions.rx_android = "2.0.1"
versions.rxjava2 = "2.1.3"
versions.socket_io = "1.0.1"
versions.splash_core = "1.0.0-rc01"
versions.timber = "5.0.1"
versions.transition = "1.3.0"
versions.truth = "1.0.1"
versions.viewpager = "1.1.0-beta01"
versions.work = "2.8.0"
versions.refresh_layout = "1.1.0"
versions.permissionX = '1.6.4'
versions.exifinterface = "1.3.3"
versions.zxing_scanner = "1.9.13"
versions.embedded = "4.3.0"
versions.facebook = '13.2.0'
versions.firebase = "30.3.1"
versions.linesdk = "5.8.1"
versions.playservices = '1.6.2'
versions.safetynet = "18.0.1"
versions.sumsub = "1.20.1"
versions.facebook_share = "15.1.0"
versions.playServicesAuth = "20.4.0"
versions.mp_chart = "v3.1.0"
versions.zendesk = "2.12.0"
versions.spotlight = "2.0.5"
versions.biometric = "1.1.0"
versions.compose = "2023.04.01"
versions.leak_canary = "2.11"
versions.compose_paging3 = "3.2.0-rc01"
versions.material3 = "1.0.1"
versions.webkit = "1.7.0"

ext.versions = versions

def build_versions = [:]
build_versions.min_sdk = 26
build_versions.compile_sdk = 33
build_versions.target_sdk = 33
build_versions.build_tools = "29.0.3"
ext.build_versions = build_versions

def deps = [:]

def activity = [:]
activity.activity_ktx = "androidx.activity:activity-ktx:$versions.activity"
deps.activity = activity

deps.appsflyer = "com.appsflyer:af-android-sdk:$versions.appsflyer"

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

deps.annotations = "androidx.annotation:annotation:$versions.annotations"

deps.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def atsl = [:]
atsl.core = "androidx.test:core:$versions.atsl_core"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
atsl.ext_junit_ktx = "androidx.test.ext:junit-ktx:$versions.atsl_junit"
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_rules"


deps.atsl = atsl

deps.benchmark = "androidx.benchmark:benchmark-junit4:$versions.benchmark"
deps.benchmark_gradle = "androidx.benchmark:benchmark-gradle-plugin:$versions.benchmark"

deps.cardview = "androidx.cardview:cardview:$versions.cardview"

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

deps.refresh_layout = "androidx.swiperefreshlayout:swiperefreshlayout:$versions.refresh_layout"

deps.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"

def coil = [:]
coil.main = "io.coil-kt:coil:$versions.coil"
coil.compose = "io.coil-kt:coil-compose:$versions.coil"
coil.coil_svg = "io.coil-kt:coil-svg:$versions.coil"
deps.coil = coil

def coroutines = [:]
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.playservices = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$versions.playservices"
deps.coroutines = coroutines

deps.anychart = "com.github.AnyChart:AnyChart-Android:$versions.anychart"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def datastore = [:]
datastore.core = "androidx.datastore:datastore:$versions.datastore"
datastore.preferences = "androidx.datastore:datastore-preferences:$versions.datastore"
datastore.preferences_core = "androidx.datastore:datastore-preferences-core:$versions.datastore"
deps.datastore = datastore

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

deps.exifinterface = "androidx.exifinterface:exifinterface:$versions.exifinterface"

def fragment = [:]
fragment.runtime = "androidx.fragment:fragment:${versions.fragment}"
fragment.runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
fragment.testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.fragment = fragment

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"

def hilt = [:]
hilt.android = "com.google.dagger:hilt-android:$versions.hilt"
hilt.compiler = "com.google.dagger:hilt-compiler:$versions.hilt"
hilt.common = "androidx.hilt:hilt-common:$versions.hilt_common"
hilt.compiler_common = "androidx.hilt:hilt-compiler:$versions.hilt_common"
hilt.work = "androidx.hilt:hilt-work:$versions.hilt_common"
deps.hilt = hilt

deps.hive_mq = "com.hivemq:hivemq-mqtt-client-shaded:$versions.hive_mq"

deps.junit = "junit:junit:$versions.junit"

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
deps.kotlin = kotlin

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
lifecycle.process = "androidx.lifecycle:lifecycle-process:$versions.lifecycle"
deps.lifecycle = lifecycle

deps.lottie = "com.airbnb.android:lottie:$versions.lottie"

def highcharts = [:]
highcharts.gson = "com.google.code.gson:gson:2.9.0" //Gson is require for highcharts library. Do not remove it anyway if still using highcharts
highcharts.chart = "com.github.highcharts:highcharts-android:9.3.2"
deps.highcharts = highcharts

def mapstruct = [:]
mapstruct.core = "org.mapstruct:mapstruct:$versions.mapstruct"
mapstruct.processor = "org.mapstruct:mapstruct-processor:$versions.mapstruct"

deps.mapstruct = mapstruct

deps.material = "com.google.android.material:material:$versions.material"

def material3 = [:]
material3.compose = "androidx.compose.material3:material3:$versions.material3"
material3.compose_window_size_class = "androidx.compose.material3:material3-window-size-class:$versions.material3"
deps.material3 = material3

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"

def moshi = [:]
moshi.core = "com.squareup.moshi:moshi:$versions.moshi"
moshi.kotlin = "com.squareup.moshi:moshi-kotlin:$versions.moshi"
moshi.adapter = "com.squareup.moshi:moshi-adapters:$versions.moshi"
moshi.codegen = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"

deps.moshi = moshi

deps.multidex = "androidx.multidex:multidex:$versions.multidex"

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.testing = "androidx.navigation:navigation-testing:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.dynamic = "androidx.navigation:navigation-dynamic-features-fragment:$versions.navigation"
deps.navigation = navigation

def okhttp = [:]
okhttp.core = "com.squareup.okhttp3:okhttp"
okhttp.logging = "com.squareup.okhttp3:logging-interceptor"
okhttp.bom = "com.squareup.okhttp3:okhttp-bom:$versions.okhttp"

deps.okhttp = okhttp

deps.paging_runtime = "androidx.paging:paging-runtime:$versions.paging"

deps.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.moshi = "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
deps.retrofit = retrofit

deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"
room.paging = "androidx.room:room-paging:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

deps.splash_core = "androidx.core:core-splashscreen:$versions.splash_core"

deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"

deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"

deps.socket_io = "io.socket:socket.io-client:$versions.socket_io"

deps.timber = "com.jakewharton.timber:timber:$versions.timber"

deps.transition = "androidx.transition:transition:$versions.transition"

deps.truth = "com.google.truth:truth:$versions.truth"

deps.viewpager = "androidx.viewpager2:viewpager2:$versions.viewpager"

def work = [:]
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def firebase = [:]
firebase.bom = "com.google.firebase:firebase-bom:${versions.firebase}"
firebase.auth = "com.google.firebase:firebase-auth-ktx"
firebase.crashlytics = "com.google.firebase:firebase-crashlytics-ktx"
firebase.analytics = "com.google.firebase:firebase-analytics-ktx"
firebase.notification = "com.google.firebase:firebase-messaging"
firebase.remote_config = "com.google.firebase:firebase-config-ktx"
firebase.dynamicLinks = "com.google.firebase:firebase-dynamic-links-ktx"
firebase.firestore = "com.google.firebase:firebase-firestore-ktx"
firebase.performance = "com.google.firebase:firebase-perf-ktx"
deps.firebase = firebase

def playServices = [:]
playServices.auth = "com.google.android.gms:play-services-auth:${versions.playServicesAuth}"
deps.playServices = playServices

//SumSub Core
def sumsub = [:]
sumsub.videoident = "com.sumsub.sns:idensic-mobile-sdk-videoident:${versions.sumsub}"
sumsub.main = "com.sumsub.sns:idensic-mobile-sdk:${versions.sumsub}"
deps.sumsub = sumsub

deps.permissionX = "com.guolindev.permissionx:permissionx:$versions.permissionX"


deps.view_tooltips = "com.github.florent37:ViewTooltip:f79a8955ef"

//QR code library
def zxing = [:]
zxing.scanner = "me.dm7.barcodescanner:zxing:$versions.zxing_scanner"
zxing.embedded = "com.journeyapps:zxing-android-embedded:$versions.embedded"
deps.zxing = zxing

// line
deps.line = "com.linecorp.linesdk:linesdk:$versions.linesdk"

def facebook = [:]
facebook.android = "com.facebook.android:facebook-login:$versions.facebook"
deps.facebook = facebook
//Region dependencies grouping

deps.network = retrofit + moshi + okhttp

//Endregion

//reCapcha - Safetynet
deps.safetynet = "com.google.android.gms:play-services-safetynet:$versions.safetynet"

//facebook share
deps.facebook_share = "com.facebook.android:facebook-share:$versions.facebook_share"

//zendesk
deps.zendesk = "zendesk.messaging:messaging-android:$versions.zendesk"

deps.mp_chart = "com.github.PhilJay:MPAndroidChart:$versions.mp_chart"
//spotlight
deps.spotlight = "com.github.takusemba:spotlight:$versions.spotlight"

//biometric
deps.biometric = "androidx.biometric:biometric:$versions.biometric"

//jetpack compose
def compose = [:]
compose.bom = "androidx.compose:compose-bom:$versions.compose"
compose.impl = [:]
compose.impl.material2 = "androidx.compose.material:material"
compose.impl.ui = "androidx.compose.ui:ui"
compose.impl.ui_tooling_preview = "androidx.compose.ui:ui-tooling-preview"
compose.impl.material_theme_adapter = "com.google.accompanist:accompanist-themeadapter-material:0.30.1"
compose.impl.lifecycle_runtime = "androidx.lifecycle:lifecycle-runtime-compose:$versions.lifecycle"
compose.impl.runtime = "androidx.compose.runtime:runtime:1.5.0"
compose.impl.viewmodel = "androidx.lifecycle:lifecycle-viewmodel-compose:$versions.lifecycle"
compose.impl.paging = "androidx.paging:paging-compose:$versions.compose_paging3"
compose.debugImpl = [:]
compose.debugImpl.ui_tooling = "androidx.compose.ui:ui-tooling"
deps.compose = compose

def leakCanary = [:]
leakCanary.android = "com.squareup.leakcanary:leakcanary-android:$versions.leak_canary"
deps.leakCanary = leakCanary

deps.webkit = "androidx.webkit:webkit:$versions.webkit"

ext.deps = deps // always in the end

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.mavenCentral()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext.addRepos = this.&addRepos
